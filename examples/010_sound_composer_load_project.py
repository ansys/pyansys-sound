"""
.. _sound_composer_load_project:

Sound Composer - Work from an existing project file
---------------------------------------------------

This example shows how use the Sound Composer. It starts from an existing project file,
loads the project into the Sound Composer and explains the notions of project, track, source,
contro profile and filter.

The example shows how to perform these operations:

- Load a project file.
- Get the project information and content
- Access to the signal generated by the project
- Access to the signal generated by a track
- Change some properties of a track

"""

# %%
# Set up analysis
# ~~~~~~~~~~~~~~~
# Setting up the analysis consists of loading the required libraries,
# and connecting to the DPF server.

# Load standard libraries.

# Load Ansys libraries.
from ansys.sound.core.examples_helpers import (
    download_aircraft_wav,
    download_fan_wav,
)
from ansys.sound.core.server_helpers import connect_to_or_start_server
from ansys.sound.core.sound_composer import SoundComposer

# Connect to a remote server or start a local server.
my_server = connect_to_or_start_server(use_license_context=True)


# %%
# Load a Sound Composer project from a file 
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Load a project in the Sound Composer, using the :meth:`load` method
# of the :class:`ansys.sound.core.sound_composer.SoundComposer` class.
# A project is a file with the extension ``.scn``, usually created within Sound SAS.
# 

# Load the Sound Composer project used in this example.
# path_sound_composer_project_scn = download_sound_composer_project_whatif(server=my_server)

# path_sound_composer_project_scn= SoundComposer.load(path_sound_composer_project_scn)

sound_composer_project = SoundComposer()
sound_composer_project.load(project_path = 
                            r"C:\\Users\\smolla\\ANSYS, Inc\\DEV - Ansys Sound - Documents\\Specifications\\DPF Sound\\InProgress\\2024 - Sound synthesis and playback (composer, genePASS, 3D playback)\\example(s)\\data\\SoundComposer-WhatIfScenario-Motor-Gear-HVAC-Noise.scn")


# %%
# Display a summary of the content of the project using print.
# You can see that this project is made of four tracks:
# - the first track contains a source of type Harmonics, it comes form a FEM simulation
# of an e-motor
# - the second track contains a source of type Harmonics, it comes from a a multibody
# simulation of the gearbox
# - the third track contains a source of type Broadband Noise, it comes from a CFD simulation
# of the HVAC system
# - the fourth track contains a source of type Broadband Noise, it comes form the analysis of 
# a measurement of the background noise in the cabin, which contains rolling noise and wind noise.
print(sound_composer_project)


# %%
# Explore the content of the project
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
# Let us have a closer look at the content of each track.

for i, track in enumerate(sound_composer_project.tracks, start=1):
    print(f'--- Track n. {i} ---')
    print(track)
    print()